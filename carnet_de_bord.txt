29/05/2014 :

Johann : 

Points 2/3 Affichage : Utilisation des "nom" et "prenom" à la place des login utilisateurs dans les pages "Utilisateurs ayant commandé" et dans le "Colisage"

	modifié :   Model/Commande.php
	modifié :   Model/Utilisateur.php
	modifié :   Views/inscription.view.php
	modifié :   Views/utilisateurAyantCommandE.view.php
	modifié :   Views/utilisateursAyantCommandECetArticle.view.php
	modifié :   inscription.php
	modifié :   install_BD.php
	modifié :   install_BD.sql
	modifié :   utilisateurAyantCommandE.php
	
Il fallait modifier à deux endroits du site (collisage et utilisateur ayant commandé) la manière dont on gérait les utilisateurs.
Ils n'étaient "identifiés" que grâce à leur login, et le client veut à présent les identifier par "Nom et Prénom". 
Pour cela j'ai donc modifié le modèle de l'inscription et rajouter "Nom" et "Prénom" dans la Base de données exploitée. (install_BD.sql/php et inscription.php)
Ainsi Nom et Prénom sont maintenant stockés dans la BD dès l'inscription => /!\ Les utilisateurs déjà inscrits n'ont pas remplis ces données ... A compléter manuellement ?
Ensuite, modification des différents fichier en fonction pour afficher Nom et Prénom pour le collisage (utilisateur.php & utilisateursAyantCommandECetArticle.view.php)
et pour les produits par utilisateurs (utilisateur.php & utilisateurayantcommandE.view.php).


Maxime : 

Point 1 Affichage: Possibilité de ranger les articles par catégories dans la page "articles commandés"

	modifié :   articlesCommandEs.php
	modifié :   articlesCommandEs.view.php

J'ai décidé de m'inspirer de ce qui avait été fait l'an dernier au niveau de "gèrer articles" par exemple, avec l'utilisation de javascript pour que ce soit homogène au reste du projet et également esthétique. Le travail a surtout consisté à comprendre comment fonctionne javascript sur ce qui avait été fait dans les autres fichiers. J'ai donc insérer les lignes de commandes javascript entre les lignes de codes précédentes de php et html afin d'ajouter les effets voulus à savoir: pouvoir cacher ou montrer les catégories d'articles que l'on désire. 

Point 7: assez délicat à modifier en raison du code précédent qui est assez rigide. Il va surement falloir modifier le code global pour faire des modifications ici.

03/06/2014

Nabil : 

Point 1 et 2

Dans l’affichage des commandes par fournisseur, on affiche maintenant le prix TTC unitaire (comme dans le cadre dans « gérer article » ) et on affiche le code du fournisseur.
Pour cela il on a dû récupérer les valeurs dans les bonnes tables (article_fournisseur), grâce à des requêtes déjà existantes.


02-03/06/2014

Maxime:

Points 2 et 5 BD: Possibilité de créer un utilisateur depuis l'administrateur et de se désinscrire, ou pour l'administrateur de supprimer des comptes. 

	modifié :   utilisateur.php
	modifié :   inscription.php
	modifié :   inscription.view.php
	modifié :   listeUtilisateurValide.view.php
	créé : desinscription.view.php

Pour la création de compte via l'administrateur, j'ai factorisé le code avec le code de "inscription" pour éviter de tout réécrire et j'ai modifié les en têtes pour que ce soit plus cohérent avec l'ajout d'un autre utilisateur que soi en testant si la session est celle de l'administrateur ou non. Pour la désinscription, rien n'était fait, j'ai donc écrit une nouvelle fonction dans le fichier inscription.php et créé un fichier view spécifique. L'interface du fichier view "liste des utilisateurs" a également été modifiée en "Gestion des utilisateurs" car on peut désormais créer ou supprimer des utilisateurs en plus de la visualisation que l'on pouvait déjà faire auparavant. 

Johann :

Exporter en PDF et excel

	modifié :   Views/commandeUtilisateur.view.php
	modifié :   utilisateurAyantCommandE.php
	add : FPDF/


Insertion dans commandeUtilisateur.view.php de deux liens spécifiques d'exportation (PDF et Excel) qui diffèrent en fonction de l'utilisateur ciblé.
Pour PDF : 
- Ajout de la bibliohtèque FPDF (FreePDF) qui permet la génération de PDF
- Création d'une méthode exportPDF() dans utilisateurayantcommandE.php dans laquelle est "repris" le code présent dans la méthode commande() du même fichier
- Les données récupérés vont directement dans un tableau créés grâce à FPDF
- Factorisation du code n'est pas optimale dans le sens ou un gros bloc de code apparait dans deux méthodes appelées successivement, mais code efficace et utile pour 
	la génération du code PDF.
- Personnalisation du PDF en fonction de l'utilisateur et du numéro de campagne. Affichage encore sous la forme "Login - Nom Prénom" (en attente du remplissage des Nom et 	Prénom des utilisateurs inscrits dans la BD).
Pour Excel :
- Création de deux requête getexportCSVDatas(idUser, idCampagne) et getexportCSVTotalTTC(idUser&idCampagne) qui permettent respectivement d'extraire les données d'une comande pour un user et une campagne et d'extraire le montant total de la commande TTC
- Les données récupérés passent dans un script pour les inclure dans un excel (.csv) qui porte le nom de l'utilisateur et de la campagne. (Modèle "login, nom prénom" pour l'instant).

04/06/2014

Johann : 

Exporter en PDF et Excel : Suite !
Matin :

	modifié :   echoppe/Model/Commande.php
	modifié :   echoppe/Views/mesCommandes.view.php
	modifié :   echoppe/mesCommandes.php
- Ajout de la possibilité d'exporter en PDF et Excel les factures des différents utilisateurs pour TOUTES les campagnes (présente, et passées).
- Ces factures sont aussi bien exportables pour l'administrateur qui peut être invité à toutes les exporter, que pour l'utilisateur qui possède les pages de ces anciennes campagnes.
- A noter que pour toutes les exportations EXCEL (uniquement), on calcule les totaux grâce aux requêtes. Le calcul se fait par sql et non grâce aux bibli php. Par conséquence le résultat n'est pas formaté comme lors de l'affichage du site.
Aprem :
	modifié :   echoppe/Model/ArticleCampagne.php
	modifié :   echoppe/Model/ArticleFournisseur.php
	modifié :   Views/commandeUtilisateur.view.php
	modifié :   Views/commandeFournisseur.view.php
	modifié :   echoppe/fournisseur.php
- Ajout d'une méthode getCommandObjectByIdFournisseurIdCampagne qui prend tous les articles commandés d'une campagne pour un fournisseur.
- Ajouts des fonctionnalités export pdf pour les commandes fournisseurs. (Manque un total sur le PDF)

